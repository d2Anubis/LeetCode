//given the root node of a binary search tree (BST) and a value
//find the node in the BST that the node's value equals the given value
//return the subtree rooted with that node
//if such node doesn't exist return NULL
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        while(root!=NULL)
        {
            if (root->val==val)
            {
                return root;   
            }
            else
            {
                if (root->val>val)
                {
                    root=root->left;
                }
                else
                {
                    root=root->right;
                }
   
            }
        }
        return NULL;
    }
};
